{"ast":null,"code":";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\n\n;\n;\n;\n;\n;\nexport let HealthCheckRating;\n(function (HealthCheckRating) {\n  HealthCheckRating[HealthCheckRating[\"Healthy\"] = 0] = \"Healthy\";\n  HealthCheckRating[HealthCheckRating[\"LowRisk\"] = 1] = \"LowRisk\";\n  HealthCheckRating[HealthCheckRating[\"HighRisk\"] = 2] = \"HighRisk\";\n  HealthCheckRating[HealthCheckRating[\"CriticalRisk\"] = 3] = \"CriticalRisk\";\n})(HealthCheckRating || (HealthCheckRating = {}));\n;\n;\n;\nexport let Gender;\n(function (Gender) {\n  Gender[\"Male\"] = \"male\";\n  Gender[\"Female\"] = \"female\";\n  Gender[\"Other\"] = \"other\";\n})(Gender || (Gender = {}));\n;","map":{"version":3,"names":["HealthCheckRating","Gender"],"sources":["/home/yankee3313/repos/FullStackOpen/part9/patientor/src/types.ts"],"sourcesContent":["export interface Diagnosis {\n  code: string;\n  name: string;\n  latin?: string;\n  patientId?: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseEntry {\nid: string;\ndescription: string;\ndate: string;\nspecialist: string;\ndiagnosisCodes?: Array<Diagnosis['code']>;\ntype: string;\n};\n\nexport interface SickLeave {\nstartDate: string;\nendDate: string;\n};\n\nexport interface OccupationalHealthcareEntry extends BaseEntry {\ntype: \"OccupationalHealthcare\";\nemployerName: string;\nsickLeave: SickLeave;\n};\n\nexport interface Discharge {\ndate: string;\ncriteria: string;\n};\n\nexport interface HospitalEntry extends BaseEntry {\ntype: \"Hospital\";\ndischarge: Discharge;\n};\n\nexport enum HealthCheckRating {\n\"Healthy\" = 0,\n\"LowRisk\" = 1,\n\"HighRisk\" = 2,\n\"CriticalRisk\" = 3\n};\n\nexport interface HealthCheckEntry extends BaseEntry {\ntype: \"HealthCheck\";\nhealthCheckRating: HealthCheckRating;\n};\n\nexport interface Patient {\nid: string;\nname: string;\noccupation: string;\ngender: string;\nssn?: string;\ndateOfBirth?: string;\nentries?: Array<BaseEntry | HospitalEntry | OccupationalHealthcareEntry | HealthCheckEntry>;\n};\n\nexport enum Gender {\nMale = 'male',\nFemale = 'female',\nOther = 'other'\n};\n\nexport type NonSensitivePatient = Omit<Patient, 'ssn' | 'entries'>;\n\nexport type NewPatientEntry = Omit<Patient, 'id'>;\n\nexport type PatientFormValues = Omit<Patient, \"id\" | \"entries\">;"],"mappings":"AAKC;;AAED;;AAQC;AAKA;AAMA;AAKA;AAKA;AAED,WAAYA,iBAAiB;AAK5B,WALWA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;AAAA,GAAjBA,iBAAiB,KAAjBA,iBAAiB;AAK5B;AAKA;AAUA;AAED,WAAYC,MAAM;AAIjB,WAJWA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;AAAA,GAANA,MAAM,KAANA,MAAM;AAIjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}